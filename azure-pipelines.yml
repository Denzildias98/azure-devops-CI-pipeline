trigger:
- master

variables:
  tag: '$(Build.BuildId)'

stages:
  - stage: Build
    displayName: Build Stage
    jobs:
     - job: Build
       displayName: Build job
       pool: 
         vmImage: 'ubuntu-latest'
       steps:
         # Task-1: Build Docker Image and push to Azure Container Registry ACR
         - task: Docker@2
           inputs:
             containerRegistry: 'acr-svc-connection'
             repository: 'app'
             command: 'buildAndPush'
             Dockerfile: '**/Dockerfile'
             tags: 
               $(tag)      
         # Task 2 publish build artifacts
         - task: PublishBuildArtifacts@1
           inputs:
            PathtoPublish: '$(System.DefaultWorkingDirectory)/kube-manifests'
            ArtifactName: 'kube-manifests'
            publishLocation: 'Container'

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    jobs:
    - deployment: Deploy
      displayName: Deploy job
      pool:
        vmImage: 'ubuntu-latest'
      environment: 'dev' #customize with your environment
      strategy:
        runOnce:
          deploy:
            steps:
            - task: DownloadPipelineArtifact@2
              inputs:
                artifactName: 'kube-manifests'
                downloadPath: '$(System.ArtifactsDirectory)/kube-manifests'

            - task: KubernetesManifest@0
              displayName: Create imagePullSecret
              inputs:
                action: 'createSecret'
                kubernetesServiceConnection: 'aks-app-deployment'
                namespace: 'app'
                secretType: 'dockerRegistry'
                secretName: 'dock-secret'
                dockerRegistryEndpoint: 'acr-svc-connection'

            - task: KubernetesManifest@0
              displayName: Deploy to Kubernetes cluster
              inputs:
                action: 'deploy'
                kubernetesServiceConnection: 'aks-app-deployment'
                namespace: 'app'
                manifests: |
                  $(System.ArtifactsDirectory)/kube-manifests/01-Deployment-and-LoadBalancer-Service.yml
                # containers: '$(containerRegistry)/$(imageRepository):$(tag)'
                containers: 'azureaksregistry1.azurecr.io/app:$(Build.BuildId)'
                imagePullSecrets: 'dock-secret'